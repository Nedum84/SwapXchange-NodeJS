name: Dev Deploy

on:
  push:
    branches: [ develop ]
  workflow_dispatch:
#    inputs:
#      name:
#        description: 'Person to greet'
#        required: true
#        default: 'Mona the Octocat'
#      home:
#        description: 'location'
#        required: false
#        default: 'The Octoverse'
jobs:

  deploy-dev:
    name: Deploy to AWS Dev
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Install Serverless Framework
        run: npm install -g serverless ts-node
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
#        OR
#      - name: Serverless AWS authentication
#        run: serverless config credentials --provider aws --key ${{ secrets.AWS_ACCESS_KEY_ID }} --secret ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Create env file
#        run: | # cp .env
#          cat > .env << EOF
#          ${{ secrets.ENV }}
#          EOF

#        run2: |
#          cat << EOF > .env
#          ${{ secrets.ENV }}
#          EOF

        run: |
          cat > .env << EOF
          DB_HOST=${{ secrets.DB_HOST }}
          DB_PORT=${{ secrets.DB_PORT }}
          DB_PASSWORD="${{ secrets.DB_PASSWORD }}"
          DB_USERNAME=${{ secrets.DB_USERNAME }}
          DB_NAME=${{ secrets.DB_NAME }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          JWT_ACCESS_EXPIRATION_MINUTES=${{ secrets.JWT_ACCESS_EXPIRATION_MINUTES }}
          JWT_REFRESH_EXPIRATION_DAYS=${{ secrets.JWT_REFRESH_EXPIRATION_DAYS }}
          PAYSTACK_TEST_KEY=${{ secrets.PAYSTACK_TEST_KEY }}
          PAYSTACK_LIVE_KEY=${{ secrets.PAYSTACK_LIVE_KEY }}
          AGORA_APP_ID=${{ secrets.AGORA_APP_ID }}
          AGORA_APP_CERT=${{ secrets.AGORA_APP_CERT }}
          NODE_ENV=development
          EOF

#        run: |
#          touch .env
#          echo API_ENDPOINTXXZ="https://xxx.execute-api.us-west-2.amazonaws.com" >> .env
#          echo API_KEY=${{ secrets.AGORA_APP_ID }} >> .env
#          cat .env

      - name: Install NPM dependencies
#        run: npm install
        run: npm install --only=prod
      - run: npm run build && npm run postbuild
      - name: Deploy Lambda functions (serverless deploy)
        run: cd build && serverless deploy --stage dev --region $AWS_DEFAULT_REGION

   # Run migration
      - run: sls invoke --function cli -d db:drop --stage dev --region $AWS_DEFAULT_REGION
#      - run: sls invoke --function databaseMigrations --stage dev --region $AWS_DEFAULT_REGION
      - run: sls invoke --function cli -d db:migrate --stage dev --region $AWS_DEFAULT_REGION

#        env: # or if using AWS credentials directly
#         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

